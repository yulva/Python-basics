# Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса
# Matrix (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы
# складываем с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    def __init__(self, m_1, m_2):
        self.m_1 = m_1
        self.m_2 = m_2

    def __add__(self):
        the_matrix = [[0, 0, 0],
                      [0, 0, 0],
                      [0, 0, 0]]

        for x in range(len(self.m_1)):

            for y in range(len(self.m_2[x])):
                the_matrix[x][y] = self.m_1[x][y] + self.m_2[x][y]

        return str('\n'.join(['\t'.join([str(y) for y in x]) for x in the_matrix]))

    def __str__(self):
        the_matrix = [[0, 0, 0],
                      [0, 0, 0],
                      [0, 0, 0]]
        return str('\n'.join(['\t'.join([str(y) for y in x]) for x in the_matrix]))


my_matrix = Matrix([[-6, 34, 19],
                    [4, -5, 87],
                    [23, 36, 10]],
                   [[79, -5, 1],
                    [13, 17, 42],
                    [-11, 55, 79]])


print(my_matrix.__add__())
